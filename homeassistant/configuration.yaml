
# Loads default set of integrations. Do not remove.
default_config:

logger:
  default: info
  
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.30.33.0/24     #Cloudflare Argo 
    - 192.168.1.240      # Add the IP address of the proxy server
    - 100.116.161.51     # allow JellyFin
    - 100.91.181.6
    - 140.238.246.176    # Allow Oracle Linux KMS
    - 172.30.32.0/23     # Subnet
    - 100.0.0.0/8        # Subnet
    - 192.168.1.0/24     # Subnet
    
# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

# Text to speech
tts:
  - platform: google_translate
# You will need to merge with your own Home Assistant configuration.yml file...

input_select:
  solar_output_source_priority:
    name: Solar Output Source Priority
    options:
      - POP00 (Utility first)
      - POP01 (Solar Utility Battery)
      - POP02 (Solar Battery Utility)

  solar_charger_priority:
    name: Solar Charger Priority Order
    options:
      - PCP00 (Utility first)
      - PCP01 (Solar first)
      - PCP02 (Solar and utility)
      - PCP03 (Solar only)


# Automations of Solar PV Inverter (such as when to charge batteries off grid / from PV etc)...
# This will automatically fire off the event to the inverter when changed in the UI.
automation:
- id: 'set_solar_output_source'
  alias: Solar Trigger Output Source Change
  trigger:
    platform: state
    entity_id: input_select.solar_output_source_priority
  action:
    service: mqtt.publish
    data_template:
      topic: 'homeassistant/sensor/voltronic'
      payload: >
        {% if is_state("input_select.solar_output_source_priority", "POP00 (Utility first)") %}
          POP00
        {% elif is_state("input_select.solar_output_source_priority", "POP01 (Solar Utility Battery)") %}
          POP01
        {% elif is_state("input_select.solar_output_source_priority", "POP02 (Solar Battery Utility)") %}
          POP02
        {% endif %}

- id: 'set_solar_charge_priority'
  alias: Stolar Trigger Charge Priority Change
  trigger:
    platform: state
    entity_id: input_select.solar_charger_priority
  action:
    service: mqtt.publish
    data_template:
      topic: 'homeassistant/sensor/voltronic'
      payload: >
        {% if is_state("input_select.solar_charger_priority", "PCP00 (Utility first)") %}
          PCP00
        {% elif is_state("input_select.solar_charger_priority", "PCP01 (Solar first)") %}
          PCP01
        {% elif is_state("input_select.solar_charger_priority", "PCP02 (Solar and utility)") %}
          PCP02
        {% elif is_state("input_select.solar_charger_priority", "PCP03 (Solar only)") %}
          PCP03
        {% endif %}

# Auto Switch to 'Solar based charging ONLY at sunrise' (will not charge batteries from the Grid to save power...)
- id: 'switch_solar_only_charging_am'
  alias: Auto switch to "Solar Only" charging at Sunrise
  trigger:
    - event: sunrise
      platform: sun
      offset: "00:15:00"
  condition: []
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.solar_charger_priority
        option: "PCP03 (Solar Only)"
    - service: input_select.select_option
      data:
        entity_id: input_select.solar_output_source_priority
        option: "POP02 (Solar Battery Utility)"

- id: 'switch_battery_late_evenings'
  # Running Late Night Switch to Line.
  alias: Switch to Utility preferred output late evenings
  trigger:
    - at: '22:00'
      platform: time
  condition: []
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.solar_output_source_priority
        option: "POP01 (Solar Utility Battery)"

sensor:
  - platform: history_stats
    name: "Inverter on Batery Mode"
    entity_id: sensor.voltronic_inverter_mode
    state: "4"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"
        
script: !include scripts.yaml
scene: !include scenes.yaml



